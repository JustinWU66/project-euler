# This file was *autogenerated* from the file 273.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_4 = Integer(4); _sage_const_100 = Integer(100); _sage_const_16 = Integer(16); _sage_const_150 = Integer(150)
p = []
for a in primes(_sage_const_150 ) :
    if a % _sage_const_4  == _sage_const_1  :
        for x in (ellipsis_range(_sage_const_1  ,Ellipsis, _sage_const_100 )) :
            y = floor(sqrt(a - x * x))
            if x * x + y * y == a :
                p += [[x, y]]
                break

ans = _sage_const_0 
def dfs(a, b, dep) :
    global ans
    if a > b :
        a, b = b, a
    if dep < _sage_const_0  :
        ans += a
        return 
    c, d = p[dep]
    dfs(a, b, dep - _sage_const_1 )
    dfs(abs(a * c - b * d), a * d + b * c, dep - _sage_const_1 )
    dfs(abs(a * d - b * c), a * c + b * d, dep - _sage_const_1 )

dfs(_sage_const_0 , _sage_const_1 , _sage_const_16  - _sage_const_1 )
print ans / _sage_const_2 
