# This file was *autogenerated* from the file 266.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_102 = Integer(102); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
P = [i for i in primes(_sage_const_102 )]
ps = []
x = _sage_const_1 
for i in P :
    x *= i
    ps += [x]

print len(P)
n = prod(P)
lmt = floor(sqrt(n))
ans = _sage_const_0 
F = {}

def dfs(dep, x) :
    if (dep, x) in F :
        return F[(dep, x)]
    if x == _sage_const_1  or dep < _sage_const_0  :
        return _sage_const_1 
    a = dfs(dep - _sage_const_1 , x)
    b = dfs(dep - _sage_const_1 , floor(x / P[dep])) * P[dep]
    if a < b :
        a = b
    F[(dep, x)] = a
    return a

# while N % a != 0 :
#     a = floor(N / floor(N / a)) + 1
#     print a
# print N, a
print n, P
ans = dfs(len(P) - _sage_const_1 , lmt)
print n % ans, ans, len(F)


