# This file was *autogenerated* from the file 322.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_5 = Integer(5); _sage_const_9 = Integer(9); _sage_const_64 = Integer(64); _sage_const_10 = Integer(10)
n = _sage_const_10 **_sage_const_7  - _sage_const_10 
m = _sage_const_10 **_sage_const_9 

GF = Integers(_sage_const_5 )
F = dict()

def dfs(dep, mod, lmt) :
    if dep == -_sage_const_1  :
        return lmt == _sage_const_0  and mod == _sage_const_0 
    state = (dep, mod, lmt)
    if state in F :
        return F[state]

    F[state] = _sage_const_0 
    if ((n >> dep) & _sage_const_1 ) == _sage_const_0  :  # can be 0
        F[state] += dfs(dep - _sage_const_1 , mod, lmt if ((m >> dep) & _sage_const_1 ) == _sage_const_0  else _sage_const_0 )
    if lmt == _sage_const_0  or ((m >> dep) & _sage_const_1 ) == _sage_const_1  :  # can be 1
        F[state] += dfs(dep - _sage_const_1 , mod + GF(_sage_const_2 )**dep, lmt)
    return F[state]

ans = _sage_const_0 
dfs(_sage_const_64 , GF(_sage_const_0 ), _sage_const_1 )
print bin(m), bin(n)
print m - n - ans
print sorted(list(F.items()))
