# This file was *autogenerated* from the file 312.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_6 = Integer(6); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_8 = Integer(8); _sage_const_13 = Integer(13); _sage_const_12 = Integer(12); _sage_const_10 = Integer(10)# R = Integers(13^8)
# a = R(2)
# f = {}
def bf(n) :
    a = Integers(_sage_const_13 **_sage_const_8 )(_sage_const_2 )
    for i in (ellipsis_range(_sage_const_1  ,Ellipsis, n - _sage_const_3 )) :
        a = a**_sage_const_3  * _sage_const_3 
    return a**_sage_const_3 

n = _sage_const_10 **_sage_const_4 
mod = _sage_const_13 **_sage_const_6 
# calc C(n) % 12*13^6
R = Integers(mod)
y = _sage_const_1  / R(_sage_const_3 ).sqrt()
x = R(_sage_const_3 ).sqrt() * _sage_const_2 
# C(n) % 13^6 = x^(3^(n-3)) * y
ans = CRT(_sage_const_0 , Integer(x**(pow(_sage_const_3 , n - _sage_const_2 , _sage_const_12  * _sage_const_13 **_sage_const_5 )) * y**_sage_const_3 ), _sage_const_12 , mod)
print ans, bf(n)
assert R(ans) == R(bf(n))

# calc C(C(n)) % 12*13^7
mod = _sage_const_13 **_sage_const_7 
R = Integers(mod)
y = _sage_const_1  / R(_sage_const_3 ).sqrt()
x = R(_sage_const_3 ).sqrt() * _sage_const_2 
# C(n) % 13^6 = x^(3^(n-3)) * y
ans = CRT(_sage_const_0 , Integer(x**(pow(_sage_const_3 , Integer(ans) - _sage_const_2 , _sage_const_12  * _sage_const_13 **_sage_const_6 )) * y**_sage_const_3 ), _sage_const_12 , mod)

# calc C(C(C(n))) % 13^8
mod = _sage_const_13 **_sage_const_8 
R = Integers(mod)
y = _sage_const_1  / R(_sage_const_3 ).sqrt()
x = R(_sage_const_3 ).sqrt() * _sage_const_2 
# C(n) % 13^6 = x^(3^(n-3)) * y
ans = x**(pow(_sage_const_3 , ans - _sage_const_2 , _sage_const_12  * _sage_const_13 **_sage_const_7 )) * y**_sage_const_3 
print ans
